<!--
  #%L
  Wildfly Camel :: Example :: Camel JMS Spring
  %%
  Copyright (C) 2013 - 2017 RedHat
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/jee
                           http://www.springframework.org/schema/jee/spring-jee.xsd
                           http://camel.apache.org/schema/spring
                           http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- Look up the JMS ConnectionFactory from JNDI -->
    <jee:jndi-lookup id="connectionFactory" jndi-name="java:jboss/DefaultJMSConnectionFactory"/>

    <!-- Configure the JMS component with the connection factory retrieved from JNDI -->
    <bean id="jmsComponent" class="org.apache.camel.component.jms.JmsComponent">
        <property name="connectionFactory" ref="connectionFactory" />
    </bean>

    <!-- Bean to choose a random order XML file -->
    <bean id="orderGenerator" class="org.wildfly.camel.examples.jms.OrderGenerator" />

    <camelContext xmlns="http://camel.apache.org/schema/spring" id="jms-spring-camel-context">

        <!--
            This route generates a random order every 5 seconds
        -->
        <route id="timerToFileRoute">
            <from id="routeTimer" uri="timer:order?period=5000&amp;delay=0"/>
            <bean id="orderGenerator" method="generateOrder" ref="orderGenerator"/>
            <setHeader name="Exchange.FILE_NAME" id="route-header-file-name">
                <method method="generateFileName" ref="orderGenerator"/>
            </setHeader>
            <to id="fileProducer" uri="file://{{jboss.server.data.dir}}/orders"/>
        </route>

        <!--
            This route reads files placed within JBOSS_HOME/standalone/data/orders
            and places them onto JMS queue 'ordersQueue' within the WildFly
            internal ActiveMQ Artemis broker.
        -->
        <route id="fileToJmsQueueRoute">
            <from id="fileConsumer" uri="file://{{jboss.server.data.dir}}/orders" />
            <convertBodyTo id="convertToString" type="java.lang.String" />
            <removeHeaders id="removeHeaders" pattern="*" />
            <to id="jmsProducer" uri="jms:queue:OrdersQueue" />
        </route>

        <!--
            This route consumes messages from the 'ordersQueue'. Then, based on the
            message payload XML content it uses a content based router to output
            orders into appropriate country directories
        -->
        <route id="jmsQueueToFileRoute">
            <from id="jmsConsumer" uri="jms:queue:OrdersQueue" />
            <choice id="choiceCountry">
                <when id="whenCountryUk">
                    <xpath id="xpathUk">/order/customer/country = 'UK'</xpath>
                    <log id="logUk" message="Sending order to the UK" />
                    <to id="fileProcessedUk" uri="file:{{jboss.server.data.dir}}/orders/processed/UK" />
                </when>
                <when id="whenCountryUs">
                    <xpath id="xpathUs">/order/customer/country = 'US'</xpath>
                    <log id="logUs" message="Sending order to the US" />
                    <to id="fileProcessedUs" uri="file:{{jboss.server.data.dir}}/orders/processed/US" />
                </when>
                <otherwise id="whenCountryOther">
                    <log id="logOther" message="Sending order to another country" />
                    <to id="fileProcessedOther" uri="file:{{jboss.server.data.dir}}/orders/processed/Other" />
                </otherwise>
            </choice>
        </route>
    </camelContext>
</beans>
